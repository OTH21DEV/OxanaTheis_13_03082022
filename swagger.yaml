swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      tags:
        - Transactions Module
      summary: User Transactions by month
      description: API for access to user's transactions by month
      parameters:
        - in: query
          name: month
          description: The number of month to get transactions for
          required: true
          type: "integer"
        - in: query
          name: year
          description: The year of month to get transactions for
          required: true
          type: "integer"
      produces:
        - application/json
      responses:
        '200':
          description: Get user's transactions successully
          schema:
            $ref: '#/definitions/Transactions'
        '400':
          description: "Invalid Fields"
        '404':
          description: "Transactions not found" 
        '500':
          description: "Internal Server Error"
  /transactions/{id}:
    get:
      tags:
        - Transactions Module
      summary: Find user transaction by ID
      description: Returns a single transaction
      parameters:
        - in: path
          name: id
          description: The transaction ID
          required: true
          type: "integer"
      produces:
        - application/json
      responses:
        '200':
          description: Get transaction successully
          schema:
            $ref: '#/definitions/Transactions'
        '400':
          description: "Invalid user transaction ID supplied"
        '404':
          description: "Transaction not found" 
        '500':
          description: "Internal Server Error"
    put:
      tags:
        - Transactions Module
      summary: Updates the details of transaction 
      description: ""
      parameters:
        - in: path
          name: id
          description: The transaction ID that needs to be updated
          required: true
          type: "integer"
        - in: body
          name: body
          description: Updated transaction object. This can only be possible for nested details object - categories and note
          required: true
          schema:
            $ref: '#/definitions/Transactions'    
      produces:
        - application/json
      responses:
        '400':
          description: "Invalid user transaction ID supplied"
        '404':
          description: "Transaction not found" 
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Transactions:
    type: object
    properties:
      month:
        type: integer
        description: month of user's transaction
      year:
        type: integer
        description: year of user's transaction
      description:
        type: string
        description: name of user's transaction
      amount:
        type: integer
        description: amount of user's transaction
      details: 
        $ref: '#/definitions/DetailsInfo'
  DetailsInfo:
    type: object
    properties: 
      name: 
        type: string
        description: type of user's transaction 
      categories: 
        type: string
        description: categories of user's transaction 
      note: 
        type: string
        description: user's notes
          
        
      